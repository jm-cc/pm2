
# -*-makefile-*-

# NewMadeleine
# Copyright (C) 2006 (see AUTHORS file)
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or (at
# your option) any later version.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.

# default settings section ====================================================

# gcc -O6 flag
CONFIG_OPT	:= no

# gcc -pg flag
CONFIG_PROFILE	:= no

# QSNET config
CONFIG_QSNET	:= no
QSNET_LIBS	:= elan

# MX config
CONFIG_MX	:= no
MX_INC_PATH	:= /opt/mx/include
MX_LD_PATH	:= /opt/mx/lib
MX_LIBS		:= myriexpress

# GM config
CONFIG_GM	:= no
GM_INC_PATH	:= /opt/gm/include
GM_LD_PATH	:= /opt/gm/lib
GM_LIBS		:= gm

# SiSCI config
CONFIG_SISCI	:= no
SISCI_INC_PATH	:= /opt/DIS/include
SISCI_LD_PATH	:= /opt/DIS/lib
SISCI_LIBS	:= sisci

# Dummy config
CONFIG_DUMMY	:= no
DUMMY_INC_PATH	:=
DUMMY_LD_PATH	:=
DUMMY_LIBS	:=

# Sched mini alt config
CONFIG_SCHED_MINI_ALT	:= no

# Sched opt config
CONFIG_SCHED_OPT	:= no

# Network sampling
CONFIG_NET_SAMPLING	:= no

# Verbosity of the building process
CONFIG_VERBOSE	:= no

# PM2 section
FLAVOR		:= tbx
PM2_CONFIG	:= "pm2-config"


# variable computing section ==================================================

# auxiliary files
AUX_CPPFLAGS	:=
AUX_CFLAGS	:=
AUX_LDFLAGS	:=
AUX_LIBS	:=

# modules
MODULES		:= core
MODULES		+= schedulers/sched_mini
MODULES		+= protocols/proto_basic
MODULES		+= drivers/tcp

# QSNET section
ifeq ($(CONFIG_QSNET), y)
AUX_CPPFLAGS	+= -DCONFIG_QSNET
AUX_CFLAGS	+=
AUX_LDFLAGS	+= 
AUX_LIBS	+= $(foreach P,$(QSNET_LIBS),-l$(P))
MODULES		+= drivers/qsnet
endif

# MX section
ifeq ($(CONFIG_MX), y)
AUX_CPPFLAGS	+= $(foreach P,$(MX_INC_PATH),-I$(P)) -DCONFIG_MX
AUX_CFLAGS	+=
AUX_LDFLAGS	+= $(foreach P,$(MX_LD_PATH),-L$(P))
AUX_LIBS	+= $(foreach P,$(MX_LIBS),-l$(P))
MODULES		+= drivers/mx
endif

# GM section
ifeq ($(CONFIG_GM), y)
AUX_CPPFLAGS	+= $(foreach P,$(GM_INC_PATH),-I$(P)) -DCONFIG_GM
AUX_CFLAGS	+=
AUX_LDFLAGS	+= $(foreach P,$(GM_LD_PATH),-L$(P))
AUX_LIBS	+= $(foreach P,$(GM_LIBS),-l$(P))
MODULES		+= drivers/gm
endif

# SISCI section
ifeq ($(CONFIG_SISCI), y)
AUX_CPPFLAGS	+= $(foreach P,$(SISCI_INC_PATH),-I$(P)) -DCONFIG_SISCI
AUX_CFLAGS	+=
AUX_LDFLAGS	+= $(foreach P,$(SISCI_LD_PATH),-L$(P))
AUX_LIBS	+= $(foreach P,$(SISCI_LIBS),-l$(P))
MODULES		+= drivers/sisci
endif

# Dummy driver example section
ifeq ($(CONFIG_DUMMY), y)
AUX_CPPFLAGS	+= $(foreach P,$(DUMMY_INC_PATH),-I$(P))) -DCONFIG_DUMMY
AUX_CFLAGS	+=
AUX_LDFLAGS	+= $(foreach P,$(DUMMY_LD_PATH),-L$(P))
AUX_LIBS	+= $(foreach P,$(DUMMY_LIBS),-l$(P))
MODULES		+= drivers/dummy
endif

# Alternate mini scheduler
ifeq ($(CONFIG_SCHED_MINI_ALT), y)
AUX_CPPFLAGS	+= -DCONFIG_SCHED_MINI_ALT
AUX_CFLAGS	+=
AUX_LDFLAGS	+=
AUX_LIBS	+=
MODULES		+= schedulers/sched_mini_alt
endif

# Optimizing scheduler
ifeq ($(CONFIG_SCHED_OPT), y)
AUX_CPPFLAGS	+= -DCONFIG_SCHED_OPT
AUX_CFLAGS	+=
AUX_LDFLAGS	+=
AUX_LIBS	+=
MODULES		+= schedulers/sched_opt
MODULES		+= protocols/proto_rdv
CONFIG_NET_SAMPLING	:= y
endif

# Network sampling code
ifeq ($(CONFIG_NET_SAMPLING), y)
AUX_CPPFLAGS	+= -DCONFIG_NET_SAMPLING
AUX_CFLAGS	+=
AUX_LDFLAGS	+=
AUX_LIBS	+=
MODULES		+=
endif

# Mad3 emulation protocol
ifeq ($(CONFIG_PROTO_MAD3), y)
# Note: proto_mad3 depends on proto_basic for now
FLAVOR		:= ntbx	# mad3 core needs ntbx as well as tbx
AUX_CPPFLAGS	+= -DCONFIG_PROTO_MAD3
AUX_CFLAGS	+=
AUX_LDFLAGS	+=
AUX_LIBS	+=
MODULES		+= protocols/proto_mad3
endif

# Compiler optimization flags
ifeq ($(CONFIG_OPT), y)
AUX_CPPFLAGS	+= -DCONFIG_OPT
AUX_CFLAGS	+= -O6
AUX_LDFLAGS	+=
AUX_LIBS	+=
MODULES		+=
endif

# Compiler profiling flags
ifeq ($(CONFIG_PROFILE), y)
AUX_CPPFLAGS	+= -DCONFIG_PROFILE
AUX_CFLAGS	+= -pg
AUX_LDFLAGS	+= -pg
AUX_LIBS	+=
MODULES		+=
endif

# Built-in logging macro activation
ifeq ($(CONFIG_LOG), y)
AUX_CPPFLAGS	+= -DCONFIG_LOG
AUX_CFLAGS	+=
AUX_LDFLAGS	+=
AUX_LIBS	+=
MODULES		+=
endif

# Built-in tracing macro activation
ifeq ($(CONFIG_TRACE), y)
AUX_CPPFLAGS	+= -DCONFIG_TRACE
AUX_CFLAGS	+=
AUX_LDFLAGS	+=
AUX_LIBS	+=
MODULES		+=
endif

# PM2 section
PM2_CFLAGS	:= $(shell $(PM2_CONFIG) --flavor=$(FLAVOR) --cflags)
PM2_LDFLAGS	:= $(shell $(PM2_CONFIG) --flavor=$(FLAVOR) --libs)

# main section
CPPFLAGS	:= $(PM2_CFLAGS)
CPPFLAGS	+= $(foreach M,$(MODULES),-I$(NM_PATH)/$(M)/include)
CPPFLAGS	+= $(AUX_CPPFLAGS)

CFLAGS		:= -g -Wall
CFLAGS		+= $(AUX_CFLAGS)

LDFLAGS		:= $(foreach M,$(MODULES),-L$(NM_PATH)/$(M))
LDFLAGS		+= $(AUX_LDFLAGS)

LIBS		:= -Xlinker --start-group $(foreach M,$(MODULES),-lnm$(notdir $(basename $(M)))) -Xlinker --end-group
LIBS		+= $(PM2_LDFLAGS)
LIBS		+= $(AUX_LIBS)

LIBS_DEP	:= $(foreach M,$(MODULES),$(NM_PATH)/$(M)/libnm$(notdir $(basename $(M))).a)


ifeq ($(CONFIG_MKVERBOSE), y)
$(info ___________________________)
$(info -------- current directory: $(CURDIR))
$(info -------- flags:             $(MAKEFLAGS))
$(info -------- level:             $(MAKELEVEL))
$(info -------- sub directories:   $(SUBDIRS))
endif
