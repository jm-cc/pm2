#!/usr/bin/env pm2-perl
#-*-perl-*-
#######################

use warnings;
use strict;


# OAR vars
my $oar_nodefile	= $ENV{"OAR_NODEFILE"};
my $oar_jobid		= $ENV{"OAR_JOBID"};
my $oar_nb_nodes	= $ENV{"OAR_NB_NODES"};

# Generated Léonie config file
my $leoar_cfgfile	= "/tmp/leoar${oar_jobid}";

# Command line args for Léonie
my $leo_leo_args;

# Extraction of Léonie args
while ($ARGV[0] =~ /^-/) {
    my $arg = shift @ARGV;
    $leo_leo_args .= " ${arg}";
}

# Léonie config file template
my $leoar_tcfgfile	= shift @ARGV	or die "template config file not specified";

# OAR nodes extraction
open my $oar_nodes_h,	"< ${oar_nodefile}"	or die "could not open OAR node file: $!";
my @nodes	= readline $oar_nodes_h		or die "could not read OAR node file: $!";
close $oar_nodes_h				or die "could not close OAR node file: $!";
chomp @nodes;

my $nodes	= join ", ", @nodes; 

# Config file génération
open my $leoar_tcfg_h,	"< ${leoar_tcfgfile}"	or die "could not open leonie template config file for reading: $!";
open my $leoar_cfg_h,	"> ${leoar_cfgfile}"	or die "could not open leonie config file for writing: $!";

while (<$leoar_tcfg_h>) {
    s/<LEOAR_NODES>/$nodes/e;
    print $leoar_cfg_h $_;
}

close $leoar_tcfg_h	or die "could not close leonie template config file: $!";
close $leoar_cfg_h	or die "could not close leonie config file: $!";

# Application processes args
my $leo_args =  join ' ', @ARGV;

# Startup
#print "leonie ${leo_leo_args} ${leoar_cfgfile} ${leo_args}\n";
system "leonie ${leo_leo_args} ${leoar_cfgfile} ${leo_args}";

# End

