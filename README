0 . Requirements ++++++++++++++++++++++++++++++++++++++++++++++++++++++

To be compiled, PM2 software needs:

* GNU Make >= 3.81
* GCC >= 3.3 (older versions may work but are no longer supported)
* GNU Bash (shells such as zsh or ksh may work but are untested)
* Perl
* GNU Autoconf > 2.50 when using NewMadeleine and/or puk.

* libtopology (when enabling MaMI or Marcel NUMA options)

TO BE COMPLETED

0 . Installing the prerequisites ++++++++++++++++++++++++++++++++++++++

Sources for libtopology can be obtained either as a tarball at the
following address:

http://gforge.inria.fr/frs/?group_id=1758

or from the Subversion server:

$ svn checkout svn://scm.gforge.inria.fr/svn/libtopology/trunk libtopology

Follow the provided instructions to install the library.


I . Configuring PM2 +++++++++++++++++++++++++++++++++++++++++++++++++++

The simplest way to configure PM2/Marcel is to run:

  ./configure

This will automatically choose a default "flavor", i.e., a set of
compilation options, that is best suited for you platform and for use
with ForestGOMP.  PM2 is then configured and can be compiled:

  make

The default flavor can be configured by hand, for instance:

  ./configure --enable-marcel --enable-nmad --enable-pioman

Note that PM2 is currently not installable.  Instead, build products are
stored under `build/ARCH/FLAVOR', where ARCH is the architecture name
(e.g., `i386') and FLAVOR the flavor name.  To compile applications, use
the flags provided by

  ./bin/pm2-config --cflags

and

  ./bin/pm2-config --libs


A different standard flavor can be specified as follows:

  ./configure --with-default-flavor=FLAVOR

For a list of standard flavors, please run the following command once
you've run `configure':

  ./bin/pm2-create-sample-flavors --list

The PM2 build system allows several flavors to be compiled in parallel.
Thus, it is still possible (although will be progressively deprecated)
to build additional flavors beyond the default flavor determined by
`configure' or specified with `--with-default-flavor':

  ./bin/pm2-create-sample-flavors some_other_flavor
  make FLAVOR=some_other_flavor

II . Advanced PM2 configuration  +++++++++++++++++++++++++++++++++++++

Before you can compile a PM2 module (or application), you have to
define a "compile flavor" that will fix the list of libraries to use
and various options for each of these libraries. Putting all these
definitions within multiple files allows to switch easily between
different "flavors" of the same application for instance (optimized
version/debug version, etc.)

For a quick start, you can install a set of default flavors which will
allow to compile a lot of (if not all) modules and examples with
standard default options. These flavors are generated by typing the
following command:

	make init

You may specify the current flavor (i.e. the one 'make' should use) by
setting the PM2_FLAVOR variable. For instance:

	export PM2_FLAVOR=pm2

To compile an application, just go to the right directory and type
'make':

	cd ${PM2_SRCROOT}/pm2/examples/simple
	make simple

For configuring flavors, just run:

	ezflavor

This launches a GUI allowing you to browse and select compilation
options (you need GTK+ for this).

III . Running a PM2 application ++++++++++++++++++++++++++++++++++++++

To run a PM2 application, you first have give the list of machines
that will belong to your "configuration". For instance, if you want to
use three machines named riri, fifi and loulou, just type:

	pm2-conf riri fifi loulou

Please refer to the help (pm2-conf -h) for a list of possible inputs.

Note: this configuration is per-flavor. If you set PM2_FLAVOR to
another flavor, remember to re-run pm2-conf.

Once your configuration is set, make sure to set PM2_RSH to your remote
shell tool:

	export PM2_RSH=ssh
	
Then you're able to run a PM2 application simply by invoking the pm2-load
loader:

	pm2-load simple

You can run all processes under the gdb debugger by simply typing:

	pm2-load -d simple

V . Miscellaneous ++++++++++++++++++++++++++++++++++++++++++++++++++++

For any problem, please first run

  make sos

To perform a few checks, and then send an email to pm2-bugs@lists.gforge.inria.fr.
