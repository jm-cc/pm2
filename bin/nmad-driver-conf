#! /bin/bash
###########

# Get some variables
DRIVER_DIR=${PM2_CONF_DIR:-${PM2_HOME:-${HOME}}/.pm2}/driver
FORCE_WRITE="false"
CHOSEN_DRIVER=""

# Help functions
usage() {
    echo "USAGE:"
    echo " --mx: Myrinet driver"
    echo " --qsnet: Quadrics driver"
    echo " --ibverbs, --ib: Infiniband driver"
    echo " --tcp: TCP driver"
    echo ""
    echo " --force-overwrite, -f: Erase already created files"
    exit 0
}

if [ $# = 0 ]; then
    usage
    exit 1
fi

# Manage args
while test $# -gt 0; do
    CMD="$1"
    case "$CMD" in
	--force-overwrite|-f)
	    FORCE_WRITE="true"
	    ;;
	--mx)
	    CHOSEN_DRIVER=mx
	    ;;
	--qsnet)
	    CHOSEN_DRIVER=qsnet
	    ;;
	--ibverbs|--ib)
	    CHOSEN_DRIVER=ibverbs
	    ;;
	--tcp)
	    CHOSEN_DRIVER=tcp
	    ;;
	-h|-help|--help)
	    usage
	    exit 0
	    ;;
	*)
	    echo "Unknown argumnet: $CMD"
	    usage
	    exit 1
	    ;;
    esac
    shift
done

if [ -z "$CHOSEN_DRIVER" ] ; then
    usage
    exit 1
fi

# Create .pm2/driver directory if it doesn't exist
if [ ! -e $DRIVER_DIR ]
    then
    mkdir -p ${DRIVER_DIR}
fi

nmad_driver_write() {
    driver=$1
    driver_file=${DRIVER_DIR}/driver_${driver}.xml
# Write XML driver files if they don't exist
if [ ! -e  ${driver_file} ] || [ ${FORCE_WRITE} = "true" ] ; then
cat > ${driver_file} <<EOF
<?xml version="1.0"?>
<!DOCTYPE puk:composite SYSTEM "${PADICO_ROOT}/etc/NetSelector.dtd">
<puk:composite id="driver-${driver}">
  <puk:component id="0" name="NewMad_Driver_${driver}"/>
  <puk:entry-point iface="NewMad_Driver" provider-id="0"/>
</puk:composite>
EOF
fi
}

nmad_driver_write mx
nmad_driver_write qsnet
nmad_driver_write ibverbs
nmad_driver_write tcp

# Link the choosen driver
if [ ! -r ${DRIVER_DIR}/driver_${CHOSEN_DRIVER}.xml ]; then
    echo "$0: driver \"${CHOSEN_DRIVER}\" does not exist."
    echo
    usage
    exit 1
fi
ln -sf ${DRIVER_DIR}/driver_${CHOSEN_DRIVER}.xml ${DRIVER_DIR}/driver_custom.xml

