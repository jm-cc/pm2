#!/bin/sh

# PM2: Parallel Multithreaded Machine
# Copyright (C) 2001 "the PM2 team" (see AUTHORS file)
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or (at
# your option) any later version.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.


PROGNAME=pm2load

_pm2load_error() # msg
{
    echo $*
    exit 1
}

_pm2load_usage() # exit_code
{
    cat <<EOF
Usage: $PROGNAME { option } command

  option:
    -f name : Use flavor named "name" (default=\$PM2_FLAVOR or default)
    -d      : Run command in debug mode (not supported by all implementations)
    -s      : Run scripts in debug mode
    -c name : Use console named "name"
    -l      : Also generate a log file on first node
    -L      : As '-l' but do not display the log file
    -u      : Use local flavor (re-run pm2-config on each node)
    -h      : Display this help message
EOF
    exit $1
}

_pm2load_ambiguity() # prog
{
    _prog=$1
    shift

    echo "Error: multiple exec files found." >&2
    echo "Please remove ambiguity by using one the following:" >&2

    for _p in `pm2which -p $_prog` ; do
	echo "   $PROGNAME $_p ..."
    done

    exit 1
}

log()
{
    if [ ! -z "$PM2_SCRIPT_DEBUG" ]; then
	echo "$*" 1>&2
    fi
}

# Programme principal
log "Running $*"

PM2_FLAVOR=${PM2_FLAVOR:-default}
export PM2_FLAVOR

PM2_CONSOLE=""

PM2_DEBUG=off
PM2_LOGS_ON_NODE_0=off
PM2_USE_LOCAL_FLAVOR=off

while [ $# -gt 0 ]; do
    case $1 in
	-f|--flavor)
	    shift
	    PM2_FLAVOR="$1"
	    shift
	    ;;
	-d|--debug)
	    shift
	    PM2_DEBUG=on
	    ;;
	-s|--debug)
	    shift
	    PM2_SCRIPT_DEBUG=on
	    ;;
	-c|--console)
	    shift
	    PM2_CONSOLE="$1"
	    shift
	    ;;
	-l|--log)
	    shift
	    PM2_LOGS_ON_NODE_0=on
	    ;;
	-L)
	    shift
	    PM2_LOGS_ON_NODE_0=only
	    ;;
	-u|--use-local-flavor)
	    shift
	    PM2_USE_LOCAL_FLAVOR=on
	    ;;
	-h|--help)
	    _pm2load_usage 0
	    ;;
	--)
	    shift
	    break
	    ;;
	-*)
	    _pm2load_usage 1
	    ;;
	*)
	    break
	    ;;
    esac
done

[ -n "$*" ] || _pm2load_usage 1

# Initialisation des arguments passés à pm2-pre-script.sh
_prescript_args=""

# Variables automatiquement exportées
PM2_EXPORT=${PM2_EXPORT:+${PM2_EXPORT}:}DISPLAY:PM2_LD_LIBRARY_PATH:PM2_FLAVOR
if [ "$PM2_SCRIPT_DEBUG" = on ]; then
    export PM2_SCRIPT_DEBUG
    _prescript_args="$_prescript_args --script-debug"
fi

# Sauvegarde de la commande et des arguments
PM2_PROG_NAME=$1
export PM2_PROG_NAME
shift

prog_args="$@"

if [ "$PM2_USE_LOCAL_FLAVOR" = off ] ; then

    PM2_EXPORT=${PM2_EXPORT:+${PM2_EXPORT}:}PM2_CONF_FILE

    # Récupération de (des) chemin(s) d'accès au fichier exécutable

    set --  --source-mode $PM2_PROG_NAME
    . ${PM2_ROOT}/bin/pm2which

    if [ $_PM2WHICH_NB_FOUND -gt 1 ] ; then
	_pm2load_ambiguity $PM2_PROG_NAME
    fi

    PM2_CMD_NAME="$_PM2WHICH_RESULT"
    export PM2_CMD_NAME

    # Librairies dynamiques (LD_PRELOAD)
    if [ -n "$_PM2CONFIG_PRELOAD" ]; then
	_prescript_args="$_prescript_args --preload $_PM2CONFIG_PRELOAD"
    fi

    # LD library path
    PM2_LD_LIBRARY_PATH="$_PM2CONFIG_LD_LIBRARY_PATH"

else # USE_LOCAL_FLAVOR

    PM2_CMD_NAME="$PM2_PROG_NAME"
    export PM2_CMD_NAME

# Pour obtenir $_PM2CONFIG_LOADER...
    set -- --source-mode
    . ${PM2_ROOT}/bin/pm2-config

    _prescript_args="$_prescript_args --use-local-flavor"

fi

# Chemin d'accès au chargeur
[ -x $_PM2CONFIG_LOADER ] || _pm2load_error "Fatal Error: \"$_PM2CONFIG_LOADER\" exec file not found!"

case $_PM2CONFIG_LOADER in
    *conf_not_needed)
	# No need to try to access the pm2 conf file
	;;
    *)
	# Récupération du chemin d'accès au fichier de config des machines
	set --  --source-mode
	. ${PM2_ROOT}/bin/pm2-conf-file

	[ -f $PM2_CONF_FILE ] || _pm2load_error "Error: PM2 is not yet configured this flavor (please run pm2conf)."
	;;
esac

# Variable DISPLAY
case "_${DISPLAY}" in
    _) DISPLAY=`uname -n`:0.0 ;;
    _:*) DISPLAY=`uname -n`${DISPLAY} ;;
    *) ;;
esac

# Arguments à passer à pm2-pre-script.sh

# Debug
if [ "$PM2_DEBUG" = on ]; then
    _prescript_args="$_prescript_args --debug"
fi

_old_ifs="$IFS"
_ifs_not_set=${IFS-yes}
IFS=":"
set $PM2_EXPORT
IFS=" "
if [ "$_ifs_not_set" = yes ]; then
    unset IFS
else
    IFS="$_old_ifs"
fi

# Variables à exporter
for v in $*; do
    eval _val=\"\$$v\"
    log "Exporting $v with value '$_val'"
    if [ -n "$_val" ]; then
	_prescript_args="$_prescript_args --export $v \"$_val\""
    fi
done

PM2_PRE_SCRIPT=${PM2_ROOT}/bin/pm2-pre-script.sh

if [ "$PM2_LOGS_ON_NODE_0" = "on" ]; then
    log "Executing: $_PM2CONFIG_LOADER ${PM2_PRE_SCRIPT} $_prescript_args -- \
	$PM2_CMD_NAME $prog_args"
    $_PM2CONFIG_LOADER ${PM2_PRE_SCRIPT} $_prescript_args -- \
	$PM2_CMD_NAME $prog_args 2>&1 | tee /tmp/${USER}-pm2log-0
    exit 0
elif [ "$PM2_LOGS_ON_NODE_0" = "only" ]; then
    log "Executing: $_PM2CONFIG_LOADER ${PM2_PRE_SCRIPT} $_prescript_args -- \
        $PM2_CMD_NAME $prog_args"
    $_PM2CONFIG_LOADER ${PM2_PRE_SCRIPT} $_prescript_args -- \
        $PM2_CMD_NAME $prog_args > /tmp/${USER}-pm2log-0 2>&1
    exit 0
else
    log "Executing: set -- ${PM2_PRE_SCRIPT} $_prescript_args -- \
        $PM2_CMD_NAME $prog_args"
    log "Executing: . $_PM2CONFIG_LOADER"
    set -- ${PM2_PRE_SCRIPT} $_prescript_args -- \
	$PM2_CMD_NAME $prog_args
    . $_PM2CONFIG_LOADER
fi
