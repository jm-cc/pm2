
#-*-sh-*-
# PM2: Parallel Multithreaded Machine
# Copyright (C) 2001 "the PM2 team" (see AUTHORS file)
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or (at
# your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.

# args: loop variable
initialize_bench()
{
	dev=$1
	shift

	if [ ! -f ${bench_setting_file} ]; then
		echo "bench setting file \"${bench_setting_file}\" not found"
		return 1
	fi

        # Configuration
	line=`grep \\^${dev} ${bench_setting_file}`

	if [ "_${line}" == "_" ]; then
		echo "device ${dev} not found in setting file"
		return 1
	fi

	OLD_IFS=$IFS
	IFS=":"
	set $line
        net="$2"
        hosts="$3"
        numactl="$4"
	IFS=$OLD_IFS

        # Creation de la flavor
        eval ${PM2_OBJROOT}/bin/pm2-flavor set --flavor=\"$flavor\" \
         --ext=\"\" \
         --modules=\"puk init nmad ntbx tbx pioman\" \
         --nmad=\"sched_opt strat_default mad3_emu ${dev} nuioa\" \
         --common=\"fortran_target_none\" \
         --all=\"build_static opt\" $flavor_options

	echo "Device = ${dev}, network = ${net}, hosts = ${hosts}, numactl = ${numactl}"
        ${PM2_OBJROOT}/bin/pm2-conf -f $flavor `echo $hosts | tr ',' ' '`
}

# args: -
run_bench()
{
        net=$1

        # Configuration
	line=`grep \\^${net} ${bench_setting_file}`
	OLD_IFS=$IFS
	IFS=":"
	set $line
        hosts="$3"
        numactl="$4"
	IFS=$OLD_IFS

	# wait for NFS to propagate the new compiled program
	sleep 10

        if [ "$net" == "mx" ] ; then
            export MX_RCACHE=1
            export MX_STATS=1
            export PM2_EXPORT=MX_RCACHE:MX_STATS
        fi

        args=""
        if [ "$numactl" == "numactl" ] ; then
            args="--numactl"
        fi

	# create a network configuration file
	networks_file=$(echo $(dirname $(${PM2_OBJROOT}/bin/pm2-conf-file -f $flavor))"/.pm2_network.cfg")
	(cat<<EOF
networks : ({
	name  : $net;
 	hosts : ($hosts);
	dev   : $net;
            });
EOF
	    ) > $networks_file


	nb_runs=5
	for i in $(seq 1 $nb_runs) ; do
		date
        	${PM2_OBJROOT}/bin/pm2-load $args --network $networks_file --protocol $net -f $flavor $leo_args $prog $leo_appli_args
	done
	date
}

# args: loop variable
finalize_bench()
{
    file_result="/tmp/pm2_bench_${prog}_${USER}_result"
    if [ "$BENCHDIR" != "" ] && [ -d $BENCHDIR ] ; then
	if [ -z "$result_file" ] ; then
            cp $file_result $BENCHDIR/
	else
	    cp $file_result $BENCHDIR/$result_file
	fi
    fi
}

####################

result_file=""
