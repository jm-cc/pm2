#! /bin/bash
###########

# Get some variables
STRAT_DIR=${PM2_CONF_DIR:-${PM2_HOME:-${HOME}}/.pm2}/strategy
NM_SO_MAX_SMALL="32726"
NM_SO_COPY_ON_SEND_THRESHOLD="32726"
ACTION="write"
CHOSEN_STRATEGY=""

# Help functions
usage() {
    cat  1>&2 <<EOF

Usage:
$0 [<opt>] <action>

where mandatory <action> is among:
  --help, -h            display this help message
  --get, -g             display the current strategy
  --gen-default         generate default strategy files
  --strat=strat_<strat> choose strategy <strat>, e.g. --strat=strat_default
    possible <strat> values are: default, aggreg, aggreg_extended, split_balance, qos
    Shortcuts are available:
      --default-strategy, --default, -d
                        for strategy 'default'
      --aggreg-strategy, --aggreg, -a
                        for strategy 'aggreg'
      --aggreg-extended-strategy, --aggreg-ext, -e
                        for strategy 'aggreg_extended'
      --aggreg-autoextended-strategy, --aggreg-autoext, -ae
                        for strategy 'aggreg_autoextended'
      --split-balance-strategy, --split-balance, -b
                        for strategy 'split_balance'
      --qos-strategy, --qos, -q
                        for strategy'qos'

options <opt> are among:
  --copy-on-send-threshold=<value>, -c=<value>:
                        set NM_SO_COPY_ON_SEND_THREASHOLD value.
  --max-small=<value>, -m=<value>:
                        set NM_SO_MAX_SMALL value.
  --overwrite-files, -f force overwriting existing strategy files

 By default: 
    * NM_SO_COPY_ON_SEND_THRESHOLD is set to $NM_SO_COPY_ON_SEND_THRESHOLD
    * NM_SO_MAX_SMALL is set to $NM_SO_MAX_SMALL

EOF
}

if [ $# = 0 ]; then
    usage
    exit 1
fi

# Manage args
while test $# -gt 0; do
    CMD="$1"
    case "$CMD" in
	--get|-g)
	    ACTION="get"
	    ;;
	--gen-default)
	    ACTION="gen_default"
	    ;;
	--overwrite-files|-f)
	    ACTION="force_write"
	    ;;
	--default-strategy|--default|-d)
	    CHOSEN_STRATEGY=default
	    ;;
	--aggreg-strategy|--aggreg|-a)
	    CHOSEN_STRATEGY=aggreg
	    ;;
	--aggreg-extended-strategy|--aggreg-ext|-e)
	    CHOSEN_STRATEGY=aggreg_extended
	    ;;
        --aggreg-autoextended-strategy|--aggreg-autoext |-ae)
	    CHOSEN_STRATEGY=aggreg_autoextended
            ;;
	--split-balance-strategy|--split-balance|-b)
	    CHOSEN_STRATEGY=split_balance
	    ;;
        --qos-strategy|--qos|-q)
            CHOSEN_STRATEGY=qos
            ;;
	--strat=strat_*|--strategy=strat_*)
	    CHOSEN_STRATEGY=$( echo "$CMD" | sed -e 's,.*=strat_,,g' )
	    ;;
	--copy-on-send-threshold=*|-c=*)
	    VALUE="${1#*=}"
	    NM_SO_COPY_ON_SEND_THRESHOLD=$VALUE
	    ;;
	--max-small=*|-m=*)
	    VALUE="${1#*=}"
	    NM_SO_MAX_SMALL=$VALUE
	    ;;
	-h|-help|--help)
	    usage
	    exit 0
	    ;;
	*)
	    echo "Unknown argument: $CMD"
	    usage
	    exit 1
	    ;;
    esac
    shift
done


nmad_strat_write() {
    strat=$1
    strat_file=${STRAT_DIR}/strategy_${strat}.xml
# Create .pm2/strategy directory if it doesn't exist
    if [ ! -e $STRAT_DIR ] ; then
	mkdir -p ${STRAT_DIR}
    fi
# Write XML strat files if they don't exist
if [ ! -e  ${strat_file} ] || [ "${ACTION}" = "force_write" ] ; then
    echo -n "Writting strategy file: ${strat}... " 1>&2
cat > ${strat_file} <<EOF
<?xml version="1.0"?>
<!DOCTYPE puk:composite SYSTEM "${PADICO_ROOT}/etc/NetSelector.dtd">
<puk:composite id="strategy-${strat}">
  <puk:component id="0" name="Nm_strategy_${strat}">
    <puk:attr label="nm_so_max_small">${NM_SO_MAX_SMALL}</puk:attr>
    <puk:attr label="nm_so_copy_on_send_threshold">${NM_SO_COPY_ON_SEND_THRESHOLD}</puk:attr>
  </puk:component>
  <puk:entry-point iface="NmStrategy" provider-id="0"/>
</puk:composite>
EOF
    echo "done." 1>&2
fi
}

nmad_strat_write_default() {
    
    nmad_strat_write default
    nmad_strat_write split_balance
    nmad_strat_write aggreg
    nmad_strat_write aggreg_extended
    nmad_strat_write aggreg_autoextended
    nmad_strat_write qos
}

case ${ACTION} in
    
    gen_default)
	echo "Generating default nmad strategy files..." 1>&2
	nmad_strat_write_default
	;;

    get)
	readlink ${STRAT_DIR}/strategy_custom.xml | sed -e "s,${STRAT_DIR}/strategy_\(.*\).xml,\1,g"
	;;

    write|force_write)

	if [ -z "$CHOSEN_STRATEGY" ] ; then
	    usage
	    exit 1
	fi
	

	nmad_strat_write_default
	
# Link the chosen strategy
	if [ ! -r ${STRAT_DIR}/strategy_${CHOSEN_STRATEGY}.xml ]; then
	    echo "$0: strategy \"${CHOSEN_STRATEGY}\" does not exist."
	    echo
	    usage
	    exit 1
	fi
	ln -sf ${STRAT_DIR}/strategy_${CHOSEN_STRATEGY}.xml ${STRAT_DIR}/strategy_custom.xml
	;;

esac

