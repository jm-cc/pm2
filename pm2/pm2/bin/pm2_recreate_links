#!/bin/sh
#
#                      PM2 HIGH-PERF/ISOMALLOC
#           High Performance Parallel Multithreaded Machine
#                           version 3.0
#
#     Gabriel Antoniu, Olivier Aumage, Luc Bouge, Vincent Danjean,
#       Christian Perez, Jean-Francois Mehaut, Raymond Namyst
#
#            Laboratoire de l'Informatique du Parallelisme
#                        UMR 5668 CNRS-INRIA
#                 Ecole Normale Superieure de Lyon
#
#                      External Contributors:
#                 Yves Denneulin (LMC - Grenoble),
#                 Benoit Planquelle (LIFL - Lille)
#
#                    1998 All Rights Reserved
#
#
#                             NOTICE
#
# Permission to use, copy, modify, and distribute this software and
# its documentation for any purpose and without fee is hereby granted
# provided that the above copyright notice appear in all copies and
# that both the copyright notice and this permission notice appear in
# supporting documentation.
#
# Neither the institutions (Ecole Normale Superieure de Lyon,
# Laboratoire de L'informatique du Parallelisme, Universite des
# Sciences et Technologies de Lille, Laboratoire d'Informatique
# Fondamentale de Lille), nor the Authors make any representations
# about the suitability of this software for any purpose. This
# software is provided ``as is'' without express or implied warranty.
#

if [ "`echo -n`" != "-n" ] ; then
	ECHO='echo -n .'
elif [ -x /usr/bin/printf ] ; then
	ECHO='printf .'
else
	ECHO='echo .'
fi

if [ "${PM2_ROOT}" = "" ]; then
    echo "PM2_ROOT is not defined"
    exit 1
fi

. ${PM2_ROOT}/bin/pm2_vars

make_ln() # Create $3 pointing on $2 in the directory $1
{
    $ECHO
    cd $1
    if [ ! -h $3 ]; then
	ln -s $2 $3
    fi
}

# pm2 links
echo PM2
make_ln ${PM2_ROOT} marcel/ARCHITECTURES ARCHITECTURES
make_ln ${PM2_ROOT}/console graphic/icons icons

# module links
echo
echo Modules
if [ ! -d ${PM2_ROOT}/modules ] ; then
    mkdir ${PM2_ROOT}/modules
fi
make_ln ${PM2_ROOT}/modules ../common common
make_ln ${PM2_ROOT}/modules ../dsm dsm
make_ln ${PM2_ROOT}/modules ../generic generic
make_ln ${PM2_ROOT}/modules ../leonie leonie
make_ln ${PM2_ROOT}/modules ../mad1 mad1
make_ln ${PM2_ROOT}/modules ../mad2 mad2
make_ln ${PM2_ROOT}/modules ../marcel marcel
make_ln ${PM2_ROOT}/modules ../ntbx ntbx
make_ln ${PM2_ROOT}/modules ../pm2 pm2
make_ln ${PM2_ROOT}/modules ../pm2debug pm2debug
make_ln ${PM2_ROOT}/modules ../tbx tbx
make_ln ${PM2_ROOT}/modules ../swann swann

# architecture-specific directories for the storage of binaries, etc.

# Toolbox

# Marcel
echo
echo Marcel
make_ln ${MARCEL_ROOT}/bin/ ../../bin/pm2_arch pm2_arch
make_ln ${MARCEL_ROOT}/bin/ ../../bin/pm2_sys pm2_sys
make_ln ${MARCEL_ROOT}/include/ ../../pm2/include/safe_malloc.h safe_malloc.h
make_ln ${MARCEL_ROOT}/include/sys/ ../../../pm2/include/sys/isomalloc_archdep.h isomalloc_archdep.h
make_ln ${MARCEL_ROOT}/include/ ../../pm2/include/timing.h timing.h
make_ln ${MARCEL_ROOT}/source/ ../../pm2/source/safe_malloc.c safe_malloc.c
make_ln ${MARCEL_ROOT}/source/ ../../pm2/source/timing.c timing.c

# Marcel / options de configuration (cf pm2-config-flavor) exclusives
$ECHO
cd ${MARCEL_ROOT}/config/options
mkdir -p ../conf.excl
for f in 1* ; do
    make_ln ../conf.excl ../options/$f $f
done

# Mad I
echo
echo Madeleine I
make_ln ${MAD1_ROOT}/ ../marcel/ARCHITECTURES ARCHITECTURES
make_ln ${MAD1_ROOT}/bin/ custom/madload madload
make_ln ${MAD1_ROOT}/bin/ ../../bin/pm2_arch pm2_arch
make_ln ${MAD1_ROOT}/bin/ ../../bin/pm2_sys pm2_sys

# Mad I / VIA
if [ -d ${MAD1_ROOT}/bin/via ] ; then
    make_ln ${MAD1_ROOT}/bin/via/ ../tcp/madload madload    
    make_ln ${MAD1_ROOT}/bin/via/ ../tcp/madspawn madspawn
else
    make_ln ${MAD1_ROOT}/bin ./tcp via
fi

# Mad I / SISCI
if [ -d ${MAD1_ROOT}/bin/sisci ] ; then
    make_ln ${MAD1_ROOT}/bin/sisci/ ../tcp/madload madload
    make_ln ${MAD1_ROOT}/bin/sisci/ ../tcp/madspawn madspawn
else
    make_ln ${MAD1_ROOT}/bin ./tcp sisci
fi

# Mad I / SHM
if [ -d ${MAD1_ROOT}/bin/shm ] ; then
    make_ln ${MAD1_ROOT}/bin/shm/ ../tcp/madload madload
    make_ln ${MAD1_ROOT}/bin/shm/ ../tcp/madspawn madspawn
else
    make_ln ${MAD1_ROOT}/bin ./tcp shm
fi

make_ln ${MAD1_ROOT}/include/ ../../pm2/include/safe_malloc.h safe_malloc.h
make_ln ${MAD1_ROOT}/include/sys/ ../../../pm2/include/sys/debug.h debug.h
make_ln ${MAD1_ROOT}/include/ ../../pm2/include/timing.h timing.h
make_ln ${MAD1_ROOT}/source/ mpi mpi_bip
make_ln ${MAD1_ROOT}/source/ mpi mpi_lam
make_ln ${MAD1_ROOT}/source/ mpi mpi_sgi
make_ln ${MAD1_ROOT}/source/ mpi mpi_sp2
make_ln ${MAD1_ROOT}/source/ ../../pm2/source/safe_malloc.c safe_malloc.c
make_ln ${MAD1_ROOT}/source/ ../../pm2/source/timing.c timing.c
make_ln ${MAD1_ROOT}/source/via/ via2.c netinterf.c

# Mad I / options de configuration (cf pm2-config-flavor) exclusives
$ECHO
cd ${MAD1_ROOT}/config/options
mkdir -p ../net.excl
for f in 1* ; do
    make_ln ../net.excl ../options/$f $f
done

# Mad II
echo
echo Madeleine II
make_ln ${MAD2_ROOT}/ ../marcel/ARCHITECTURES ARCHITECTURES

# DSM
echo
echo DSM
make_ln ${DSM_ROOT}/include/ ../../pm2/include/timing.h timing.h
make_ln ${DSM_ROOT}/include/ ../../pm2/include/safe_malloc.h safe_malloc.h
make_ln ${DSM_ROOT}/ ../marcel/ARCHITECTURES ARCHITECTURES

# Madeleine default selection

echo .
${PM2_ROOT}/bin/pm2madselect 2

