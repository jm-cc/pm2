#!/bin/sh

# PM2: Parallel Multithreaded Machine
# Copyright (C) 2001 "the PM2 team" (see AUTHORS file)
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or (at
# your option) any later version.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.


_PM2CLEAN_PROGNAME=pm2-clean

pm2clean_error() # msg
{
    echo $* >&2
    exit 1
}

pm2clean_usage() # exit_code
{
    cat <<EOF
Usage: $_PM2CLEAN_PROGNAME { option } { flavors }
  option:
    -a,--all     : Clean all flavors
    -h,--help    : Display this help message
    -f,--fake    : Do nothing, just print actions
    -r,--refresh : Regenerate the flavors in addition
EOF
    exit $1
}

# Programme principal

PM2_FLAVOR=${PM2_FLAVOR:-default}
export PM2_FLAVOR

_all_flavors=no
_refresh=no
_fake=no

while [ $# -gt 0 ]; do
    case $1 in
	-a|--all)
	    _all_flavors=yes
	    shift
	    ;;
	-h|--help)
	    pm2clean_usage 0
	    ;;
	-r|--refresh)
	    _refresh=yes
	    shift
	    ;;
	-f|--fake)
	    _fake=yes
	    shift
	    ;;
	--)
	    shift; break
	    ;;
	*)
	    break
	    ;;
    esac
done

if [ $# -eq 0 ] ; then
    fla=${PM2_FLAVOR:-default}
else
    fla="$@"
fi

set -- --source-mode
. ${PM2_ROOT}/bin/pm2-flavor-file

if [ ! -d $PM2_USER_FLAVOR_DIR ]; then
    pm2clean_error "No existing flavors yet."
fi

all_flavors_list="`(cd $PM2_USER_FLAVOR_DIR; ls)`"
all_flavors_list="`echo $all_flavors_list`"

if [ $_all_flavors = yes ]; then
    fla="$all_flavors_list"
fi

# Verif
flavors=""
for f in $fla; do
    case " $all_flavors_list " in
	*\ $f\ *)
	    flavors="${flavors:+$flavors }$f"
	    ;;
	*)
	    echo "Warning: ignoring non-existent flavor $f" >&2
	    ;;
    esac
done

if [ $_fake = yes ]; then
    _prefix="echo"
else
    _prefix=""
fi

for f in $flavors; do
    if [ $_refresh = yes ]; then
	echo "Re-generating flavor $f..."
	$_prefix ${PM2_ROOT}/bin/pm2-flavor regenerate --flavor=$f
    fi
    echo "Cleaning for flavor $f..."
    $_prefix rm -rf `${PM2_ROOT}/bin/pm2-config --builddir --flavor=$f`
done

exit 0
