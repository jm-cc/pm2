
typedef struct {
  	union {
		jmpbuf;
		ucontext;
	}
	enum {
    		
	} return;
} marcel_ucontext;

marcel_cxt_getcontext(pid) {
  call_SAVE_STACKED_REGS();
  return MA_THR_SETJMP(buf);
}

marcel_cxt_setcontext(buf) {
  longjmp(buf, NORMAL_RETURN);
}

/* marcel_create : passage père->fils */
marcel_cxt_set_new_stack(new_task, new_sp) {
  call_ST_FLUSH_WINDOWS();
  call_SAVE_STACKED_REGS();
  set_stacked_regs_area(new_task); /* base à zero */
  set_sp(new_sp);
}

/* marcel_exit : changement de pile */
marcel_cxt_change_stack(new_task, new_sp) {
  call_ST_FLUSH_WINDOWS();
  call_SAVE_STACKED_REGS();
  copy_stacked_regs_area(cur_task, new_task);
  set_stacked_regs_area(new_task); /* base à la valeur actuelle (copié juste avant ?) */
  set_sp(new_sp);
}

/* marcel_deviate : passage temporaire sur une autre pile */
marcel_cxt_switch_stack(from_task, to_task, new_sp) {
  call_ST_FLUSH_WINDOWS();
  call_SAVE_STACKED_REGS();
  move_stacked_regs_area(cur_task, new_task);
  set_stacked_regs_area(new_task);
  set_sp(new_sp);
}

