#!/bin/sh
#
#                      PM2 HIGH-PERF/ISOMALLOC
#           High Performance Parallel Multithreaded Machine
#                           version 3.0
#
#     Gabriel Antoniu, Olivier Aumage, Luc Bouge, Vincent Danjean,
#       Christian Perez, Jean-Francois Mehaut, Raymond Namyst
#
#            Laboratoire de l'Informatique du Parallelisme
#                        UMR 5668 CNRS-INRIA
#                 Ecole Normale Superieure de Lyon
#
#                      External Contributors:
#                 Yves Denneulin (LMC - Grenoble),
#                 Benoit Planquelle (LIFL - Lille)
#
#                    1998 All Rights Reserved
#
#
#                             NOTICE
#
# Permission to use, copy, modify, and distribute this software and
# its documentation for any purpose and without fee is hereby granted
# provided that the above copyright notice appear in all copies and
# that both the copyright notice and this permission notice appear in
# supporting documentation.
#
# Neither the institutions (Ecole Normale Superieure de Lyon,
# Laboratoire de L'informatique du Parallelisme, Universite des
# Sciences et Technologies de Lille, Laboratoire d'Informatique
# Fondamentale de Lille), nor the Authors make any representations
# about the suitability of this software for any purpose. This
# software is provided ``as is'' without express or implied warranty.
#

. ${PM2_ROOT}/bin/pm2_vars

${MARCEL_ROOT}/bin/marcelclean $*
echo

${MAD1_ROOT}/bin/madclean $*
echo

${MAD2_ROOT}/bin/mad2clean $*
echo

${DSM_ROOT}/bin/dsmclean $*
echo

if test $# -gt 0
then
    ARCH=$*
else
    ARCH=`cat ${MARCEL_ROOT}/ARCHITECTURES`
fi

echo Cleaning PM2:
echo
for i in $ARCH
do
	echo $i
	# librairies 
	for f in `ls ${PM2_ROOT}/lib/$i`
	do
	    if [ ! -d ${PM2_ROOT}/lib/$i/$f ] ; then
		echo "	deleting ${PM2_ROOT}/lib/$i/$f"
		rm ${PM2_ROOT}/lib/$i/$f
	    fi
	done
	# objets "source"
	for f in `ls ${PM2_ROOT}/source/obj/$i`
	do
	    if [ ! -d ${PM2_ROOT}/source/obj/$i/$f ] ; then
		echo "	deleting ${PM2_ROOT}/source/obj/$i/$f"
		rm ${PM2_ROOT}/source/obj/$i/$f
	    fi
	done
	# librairies (TOOLBOX)
	for f in `ls ${PM2_ROOT}/toolbox/lib/$i`
	do
	    if [ ! -d ${PM2_ROOT}/toolbox/lib/$i/$f ] ; then
		echo "	deleting ${PM2_ROOT}/toolbox/lib/$i/$f"
		rm ${PM2_ROOT}/toolbox/lib/$i/$f
	    fi
	done
	# objets "source" (TOOLBOX)
	for f in `ls ${PM2_ROOT}/toolbox/obj/$i`
	do
	    if [ ! -d ${PM2_ROOT}/toolbox/obj/$i/$f ] ; then
		echo "	deleting ${PM2_ROOT}/toolbox/obj/$i/$f"
		rm ${PM2_ROOT}/toolbox/obj/$i/$f
	    fi
	done
	# librairies (Net TOOLBOX)
	for f in `ls ${PM2_ROOT}/toolbox/net/lib/$i`
	do
	    if [ ! -d ${PM2_ROOT}/toolbox/net/lib/$i/$f ] ; then
		echo "	deleting ${PM2_ROOT}/toolbox/net/lib/$i/$f"
		rm ${PM2_ROOT}/toolbox/net/lib/$i/$f
	    fi
	done
	# objets "source" (Net TOOLBOX)
	for f in `ls ${PM2_ROOT}/toolbox/net/obj/$i`
	do
	    if [ ! -d ${PM2_ROOT}/toolbox/net/obj/$i/$f ] ; then
		echo "	deleting ${PM2_ROOT}/toolbox/net/obj/$i/$f"
		rm ${PM2_ROOT}/toolbox/net/obj/$i/$f
	    fi
	done
	# console
	for f in `ls ${PM2_ROOT}/console/obj/$i`
	do
	    if [ ! -d ${PM2_ROOT}/console/obj/$i/$f ] ; then
		echo "	deleting ${PM2_ROOT}/console/obj/$i/$f"
		rm ${PM2_ROOT}/console/obj/$i/$f
	    fi
	done
	for f in `ls ${PM2_ROOT}/console/bin/$i`
	do
	    if [ ! -d ${PM2_ROOT}/console/bin/$i/$f ] ; then
		echo "	deleting ${PM2_ROOT}/console/bin/$i/$f"
		rm ${PM2_ROOT}/console/bin/$i/$f
	    fi
	done
	# exemples
	for rep in `ls ${PM2_ROOT}/examples`
	do
		rep=examples/$rep
		if test -d ${PM2_ROOT}/$rep/bin/$i -a -d ${PM2_ROOT}/$rep/obj/$i
		then
			# executables
			for f in `ls ${PM2_ROOT}/$rep/bin/$i`
			do
				if test ! -d ${PM2_ROOT}/$rep/bin/$i/$f
				then
					echo "	deleting ${PM2_ROOT}/$rep/bin/$i/$f"
					rm ${PM2_ROOT}/$rep/bin/$i/$f
				fi
			done
			# objets
			for f in `ls ${PM2_ROOT}/$rep/obj/$i`
			do
				if test ! -d ${PM2_ROOT}/$rep/obj/$i/$f
				then
					echo "	deleting ${PM2_ROOT}/$rep/obj/$i/$f"
					rm ${PM2_ROOT}/$rep/obj/$i/$f
				fi
			done
		fi
	done
done
