#!/bin/sh

# PM2: Parallel Multithreaded Machine
# Copyright (C) 2001 "the PM2 team" (see AUTHORS file)
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or (at
# your option) any later version.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.


_PM2WHICH_PROGNAME=pm2which

pm2which_error() # msg
{
    echo $* >&2
    exit 1
}

pm2which_usage() # exit_code
{
    cat <<EOF
Usage: $_PM2WHICH_PROGNAME { option } command

  option:
    -f name : Use flavor named "name" (default=\$PM2_FLAVOR or default)
    -p      : Print possible prefixed notations (used to remove ambiguity)
    -h      : Display this help message
EOF
    exit $1
}

pm2which_prettyprint() # path path...
{
    for p
    do
	if [ $_PM2WHICH_SHOW_PREFIX = yes ]; then
	    case "$PM2_SYS" in
		WIN*_SYS)
		    echo $p | sed -e 's|.*examples/\(.*\)/bin/\(.*\)|\1:\2|' -e 's|\.exe$||g'
		    ;;
		*)
		    echo $p | sed -e 's|.*examples/\(.*\)/bin/\(.*\)|\1:\2|'
		    ;;
	    esac
	else
	    echo $p
	fi
    done
}

pm2which_handle_colon() # dir:name
{
    _old_ifs="$IFS"
    IFS=":"
    set $*
    IFS=$_old_ifs

    _dir=$1
    _name=$2
    [ -x ${_PM2WHICH_EXDIR}/${_dir}/bin/${_name} ] || pm2which_error "Error: \"${_PM2WHICH_EXDIR}/${_dir}/bin/${_name}\" exec file not found."
    _PM2WHICH_RESULT="${_PM2WHICH_EXDIR}/${_dir}/bin/${_name}"
    _PM2WHICH_NB_FOUND=1
}

pm2which_find_exec() # file
{
    _file=$1
    _fifo=$_PM2WHICH_EXDIR
    _PM2WHICH_RESULT=""

    while [ -n "$_fifo" ] ; do
	set $_fifo
	_rep=$1
	shift
	_fifo="$*"

	for _f in $_rep/* ; do
	    if [ -d $_f ] ; then
		_fifo="$_fifo $_f"
	    elif [ $_rep/$_file = $_f -a -x $_f ] ; then
		_PM2WHICH_RESULT="${_PM2WHICH_RESULT:+$_PM2WHICH_RESULT }$_f"
	    #else : ni un sous-répertoire, ni le fichier que l'on cherche
	    fi
	done
    done

    if [ -n "$_PM2WHICH_RESULT" ] ; then
	set $_PM2WHICH_RESULT
	_PM2WHICH_NB_FOUND=$#
    else
	_PM2WHICH_NB_FOUND=0
    fi
}

pm2which_do_search() # file
{
    pm2which_find_exec $1

    [ $_PM2WHICH_NB_FOUND -eq 0 ] && pm2which_error "Error: no \"$1\" exec file found under \"${_PM2WHICH_EXDIR}\""
}

pm2which_calc()
{
    export _PM2WHICH_EXDIR
    _PM2WHICH_EXDIR=$_PM2CONFIG_BUILD/examples

    export _PM2WHICH_RESULT
    export _PM2WHICH_NB_FOUND
    # On regarde si le nom de la commande est relatif/absolu

    case "$PM2_SYS" in
	WIN*_SYS)
	    _ext=".exe"
	    ;;
	*)
	    _ext=""
	    ;;
    esac

    _prog="$1"

    case "$_prog" in
	/*)
	    [ -x "$_prog" ] || pm2which_error "Error: \"$_prog\" exec file not found."
	    _PM2WHICH_RESULT=$1
	    _PM2WHICH_NB_FOUND=1
	    ;;
	*:*)
	    pm2which_handle_colon $_prog$_ext
	    ;;
	*)
	    if [ -f "$_prog" -a -x "$_prog" ]; then
		_PM2WHICH_RESULT="$PWD/$_prog"
		_PM2WHICH_NB_FOUND=1
	    else
		pm2which_do_search $_prog$_ext
	    fi
	    ;;
    esac
}

# Programme principal

PM2_FLAVOR=${PM2_FLAVOR:-default}
export PM2_FLAVOR

_PM2WHICH_SHOW_PREFIX=no
_PM2WHICH_SOURCE_MODE=no

while [ $# -gt 0 ]; do
    case $1 in
	-f)
	    shift
	    PM2_FLAVOR="$1"
	    shift
	    ;;
	-p)
	    shift
	    _PM2WHICH_SHOW_PREFIX=yes
	    ;;
	-h)
	    pm2which_usage 0
	    ;;
	--source-mode)
	    _PM2WHICH_SOURCE_MODE=yes
	    shift
	    ;;
	--)
	    shift
	    break
	    ;;
	*)
	    break
	    ;;
    esac
done

[ $# -eq 1 ] || pm2which_usage 1

_PM2WHICH_ARGS="$*"

set -- --source-mode
. ${PM2_ROOT}/bin/pm2-config

pm2which_calc $_PM2WHICH_ARGS

if [ $_PM2WHICH_SOURCE_MODE = no ]; then
    pm2which_prettyprint $_PM2WHICH_RESULT
    if [ $_PM2WHICH_NB_FOUND -eq 1 ] ; then
	exit 0
    else
	exit 1
    fi
fi

